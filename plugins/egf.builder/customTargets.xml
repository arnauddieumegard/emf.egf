<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<property name="allElementsFile" value="allElements.xml"/>
	<import file="${allElementsFile}" />
	<target name="allElements">
		<antcall target="allElementsDelegator" />
	</target>

	<!-- ===================================================================== -->
	<!-- ===================================================================== -->
	<target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
		<get src="${eclipseBaseURL}" dest="${buildDirectory}/../temp-base.zip" />
		<unzip dest="${base}" overwrite="true" src="${buildDirectory}/../temp-base.zip" />
	</target>

	<target name="checkLocalBase">
		<available file="${base}" property="skipBase" />
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from local repository -->
	<!-- The map file is got from an env variable 'map.file' and copied in 2 specific locations -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<mkdir dir="${buildDirectory}/maps"/>
		<copy file="${map.file}" todir="${buildDirectory}/maps"/>
		<copy file="${map.file}" tofile="${buildDirectory}/directory.txt"/>
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
		<!-- clean previous  build -->
		<delete dir="${buildDirectory}/features"/>
		<delete dir="${buildDirectory}/plugins"/>
		<delete dir="${buildDirectory}/maps" />
		<delete file="${buildDirectory}/directory.txt" />
		<delete>
			<fileset dir="${buildDirectory}">
				<include name="*.xml"/>
			</fileset>
		</delete>
		<delete>
			<fileset dir="${buildDirectory}" includes="**/*.properties"/>
		</delete>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<antcall target="getBaseComponents" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
    <delete includeemptydirs="true">
      <fileset dir="${buildDirectory}" includes="**/bin/**" />
    </delete>
	  <replace dir="${buildDirectory}/plugins" value="${buildId}" token="@buildId@">
      <include name="**/about.mappings" />
	  </replace>  		
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
    <replace dir="${buildDirectory}/plugins" value="${buildId}" token="@buildId@">
      <include name="**/about.mappings" />
    </replace>      		
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<antcall target="gatherLogs" />
		<antcall target="test"></antcall>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">
		<property name="eclipse-home" value="${eclipseAutomatedTestHome}/eclipse"/>
		<!-- clean test target -->
		<echo message="Cleaning test target..."/>
		<delete dir="${eclipse-home}/dropins/egf"/>
		<mkdir dir="${eclipse-home}/dropins/egf"/>
		<delete dir="${eclipseAutomatedTestHome}/results"/>
		<delete file="${eclipseAutomatedTestHome}/test.properties"/>
		<!-- prepare test target -->
		<echo message="Setting up tests in ${eclipse-home}/dropins/egf..."/>
		<exec dir="." executable="unzip">
			<arg line="-o -qq ${buildDirectory}/${buildLabel}/org.eclipse.egf.core-${buildId}.zip -d ${eclipse-home}/dropins/egf"/>
		</exec>  
		<exec dir="." executable="unzip">
			<arg line="-o -qq ${buildDirectory}/${buildLabel}/org.eclipse.egf.core.fc-${buildId}.zip -d ${eclipse-home}/dropins/egf"/>
		</exec>  
		<exec dir="." executable="unzip">
			<arg line="-o -qq ${buildDirectory}/${buildLabel}/org.eclipse.egf.tests-${buildId}.zip -d ${eclipse-home}/dropins/egf"/>
		</exec>  
		<exec dir="." executable="unzip">
			<arg line="-o -qq ${buildDirectory}/${buildLabel}/org.eclipse.egf.tests.ju-${buildId}.zip -d ${eclipse-home}/dropins/egf"/>
		</exec>
		<generateTestProperties buildDirectory="${buildDirectory}" featureId="org.eclipse.egf.tests.ju" outputFile="${eclipseAutomatedTestHome}/test.properties"/>
		<!-- launch tests -->
		<echo message="Executing tests..."/>
		<ant antfile="${eclipseAutomatedTestHome}/test.xml" target="all" dir="${eclipseAutomatedTestHome}"> 
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">
	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>
</project>