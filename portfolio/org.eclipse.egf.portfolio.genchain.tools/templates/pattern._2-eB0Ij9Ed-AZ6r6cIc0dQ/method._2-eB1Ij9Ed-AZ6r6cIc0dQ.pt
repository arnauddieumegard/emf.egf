		ResourceSet resourceSet = (ResourceSet) ctx.getValue(FcoreBuilderConstants.RESOURCE_SET);
		IPath ecorePath = new Path(parameter.getModelPath());
		URI ecoreURI = URI.createPlatformPluginURI(ecorePath.toString(), false);
		IPath genmodelPath = ecorePath.removeFileExtension().addFileExtension("genmodel");
		URI genmodelURI = URI.createPlatformPluginURI(genmodelPath.toString(), false);
		try {
			Resource resource = resourceSet.getResource(genmodelURI, true);
			((HashMap<EmfGeneration, URI>) ctx.getValue(FcoreBuilderConstants.GENMODEL_URIS)).put(parameter, genmodelURI);
		} catch (Exception e) {
			IPath newPath = new Path(parameter.getPluginName());
			newPath = newPath.append(genmodelPath.removeFirstSegments(1));
			URI newPathURI = URI.createPlatformPluginURI(newPath.toString(), false);
			Resource genResource = null;
			try {
				genResource = resourceSet.getResource(newPathURI, true);
				((HashMap<EmfGeneration, URI>) ctx.getValue(FcoreBuilderConstants.GENMODEL_URIS)).put(parameter, newPathURI);
			} catch (Exception e1) {
				IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(parameter.getPluginName());
				if (!project.exists())
					project.create(null);
				if (!project.isOpen())
					project.open(null);
				WorkspaceOperationRunner runner = new WorkspaceOperationRunner();
				runner.setProgressMonitor(null);
				runner.run(true, false, new ConvertProjectOperation(project, false, false));

				genResource = resourceSet.createResource(newPathURI);
				((HashMap<EmfGeneration, URI>) ctx.getValue(FcoreBuilderConstants.GENMODEL_URIS)).put(parameter, newPathURI);
				importer = EcoreImporterHelper.createEcoreImporter(newPath.removeLastSegments(1), ecoreURI, parameter);			}
		}
